# exit if non-interactive
case $- in *i*) ;; *) return;; esac
# if ! [[ $CHEZMOI_SUBSHELL == 1 ]]; then cd ~; fi
# set working directory (alacritty doesn't accept relative paths)

# uncomment for powerlevel10k instant prompt
# if [ -r "${XDG_CACHE_HOME:-$HOME.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]; then
#     source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#     source 
# fi

export FNM_PATH="$HOME/.local/share/fnm"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$HOME/.cargo/bin:$PATH" # thefuck might require this
export PATH="$PATH:$HOME/.local/bin"
export PATH="$HOME/perl5/bin:$PATH"
export INFOPATH="/usr/local/texlive/2025/texmf-dist/doc/info:$INFOPATH"

if [[ $(uname) == "Linux" ]]; then # linux
    if [ -d "$FNM_PATH" ]; then export PATH="$FNM_PATH:$PATH"; fi
    export PATH="$PATH:/opt/nvim-linux64/bin"
    export PATH="$PATH:/home/linuxbrew/.linuxbrew/bin"
elif [[ $(uname) == "Darwin" ]]; then # macos
    # TBA
    export PATH="/usr/local/bin:$PATH"
    export PATH="$PATH:/opt/homebrew/bin"
    export PATH="$PATH:/Library/TeX/texbin"
    export PATH="$PATH:/Applications/Inkscape.app/Contents/MacOS"
    export PATH="$PATH:/Applications/sioyek.app/Contents/MacOS"
fi
if [ -d "$PYENV_ROOT/shims" ]; then export PATH="$PYENV_ROOT/shims:$PATH"; fi

export PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_MB_OPT="--install_base \"$HOME/perl5\""
export PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"

export ZSH="$HOME/.oh-my-zsh"
export MANPATH="/usr/local/man:$MANPATH"

#ZSH_THEME="daveverwer"
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
ZSH_DISABLE_COMPFIX="true"
HYPHEN_INSENSITIVE="true"
DISABLE_AUTO_TITLE="false"
HIST_STAMPS="%d-%m-%y %H:%M" # in history command
plugins=()

if command -v "zstyle" &>/dev/null; then
    zstyle ':omz:update' mode auto      # update automatically without asking
    zstyle ':omz:update' frequency 13   # days
    zstyle ':omz:*' aliases no
fi

if [[ -n $SSH_CONNECTION ]]; then export EDITOR='vim'; else export EDITOR='nvim'; fi

# scripts that have to be executed
if [ -x /usr/bin/lesspipe ]; then eval "$(SHELL=/bin/sh lesspipe)"; fi
if [ -d "$FNM_PATH" ]; then eval "$(fnm env)"; fi
if [ -d "$PYENV_ROOT/shims" ]; then eval "$(pyenv init -)"; fi
if command -v "zoxide" &>/dev/null; then eval "$(zoxide init zsh)"; fi
if command -v "thefuck" &>/dev/null; then eval "$(thefuck --alias)"; fi

if [ -f $ZSH/oh-my-zsh.sh ]; then source $ZSH/oh-my-zsh.sh; fi
if [ -f $HOME/.zplug/init.zsh ]; then
    source $HOME/.zplug/init.zsh
    zplug "romkatv/powerlevel10k", as:theme, depth:1
    zplug "zsh-users/zsh-syntax-highlighting", defer:2
    zplug "zsh-users/zsh-autosuggestions", defer:2
    if ! zplug check; then zplug install; fi
    zplug load
    if [ -f "$HOME/.p10k.zsh" ]; then source "$HOME/.p10k.zsh"; fi
fi
if command -v "zoxide" &>/dev/null; then alias cd='z'; fi
if command -v "matrix-commander" &>/dev/null; then alias mc='matrix-commander -m "The terminal command has finished." --sync off --log-level ERROR ERROR'; fi
__conda_setup="$('/opt/homebrew/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/anaconda3/etc/profile.d/conda.sh" ]; then
        source "/opt/homebrew/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup

alias ls='eza'
alias l='eza -ahl --no-user --git --icons'
alias pbcopy='clipcopy'
alias pbpaste='clippaste'
alias xdg-open='open'
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word
bindkey "^[[1;5C" end-of-line
bindkey "^[[1;5D" beginning-of-line

